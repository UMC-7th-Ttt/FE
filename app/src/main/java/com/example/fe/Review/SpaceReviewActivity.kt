package com.example.fe.Review

import android.content.Intent
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import com.bumptech.glide.Glide
import com.example.fe.R
import com.example.fe.databinding.ActivityReviewSpaceBinding

class SpaceReviewActivity : AppCompatActivity() {

    private lateinit var binding: ActivityReviewSpaceBinding
    private var placeId: Long = -1L

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityReviewSpaceBinding.inflate(layoutInflater)
        setContentView(binding.root)

        // üîπ Ïù∏ÌÖêÌä∏ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
        placeId = intent.getLongExtra("PLACE_ID", -1L)
        val placeTitle = intent.getStringExtra("PLACE_TITLE") ?: "Ïû•ÏÜå ÏóÜÏùå"
        val placeImage = intent.getStringExtra("PLACE_IMAGE") ?: ""

        // üîπ Î°úÍ∑∏ Ï∂îÍ∞Ä (Intent Í∞í ÌôïÏù∏)
        Log.d("SpaceReviewActivity", "Received Intent Data:")
        Log.d("SpaceReviewActivity", "PLACE_ID: $placeId")
        Log.d("SpaceReviewActivity", "PLACE_TITLE: $placeTitle")
        Log.d("SpaceReviewActivity", "PLACE_IMAGE: $placeImage")

        // üîπ UI Ï†ÅÏö©
        binding.placeTitle.text = placeTitle
        Glide.with(this).load(placeImage).into(binding.placeImage)

        // ‚úÖ Ï¥àÍ∏∞ ÏÉÅÌÉú: Î≤ÑÌäº ÎπÑÌôúÏÑ±Ìôî
        binding.submitButton.isEnabled = false

        // ‚≠ê Î≥ÑÏ†ê ÏûÖÎ†• Ïãú ÏóÖÎç∞Ïù¥Ìä∏ Î∞è Î≤ÑÌäº ÌôúÏÑ±Ìôî Ï≤¥ÌÅ¨
        binding.ratingBar.setOnRatingBarChangeListener { _, rating, _ ->
            binding.ratingText.setText(String.format("%.1f", rating))
            validateForm(rating)
        }

        // ‚≠ê EditTextÏóêÏÑú Ïà´ÏûêÎ•º ÏûÖÎ†•ÌïòÎ©¥ Î≥ÑÏ†êÎèÑ Î≥ÄÍ≤ΩÎêòÎèÑÎ°ù ÏÑ§Ï†ï
        binding.ratingText.addTextChangedListener(object : TextWatcher {
            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}

            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
                val rating = s.toString().toFloatOrNull() ?: 0f
                if (rating in 0.0..5.0) {
                    binding.ratingBar.rating = rating // Î≥ÑÏ†ê UIÎèÑ ÏóÖÎç∞Ïù¥Ìä∏
                    validateForm(rating)
                }
            }

            override fun afterTextChanged(s: Editable?) {}
        })

        // üîπ ÏôÑÎ£å Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú `SharedPreferences`Ïóê Ï†ÄÏû• ÌõÑ `ReviewActivity` Ïù¥Îèô
        binding.submitButton.setOnClickListener {
            val rating = binding.ratingBar.rating

            // üîπ Ïû•ÏÜå Îç∞Ïù¥ÌÑ∞ `SharedPreferences`Ïóê Ï†ÄÏû•
            savePlaceToPreferences(placeId, placeTitle, placeImage, rating)

            // üîπ Î°úÍ∑∏ Ï∂îÍ∞Ä
            Log.d("SpaceReviewActivity", "Saved to SharedPreferences:")
            Log.d("SpaceReviewActivity", "PLACE_ID: $placeId")
            Log.d("SpaceReviewActivity", "PLACE_TITLE: $placeTitle")
            Log.d("SpaceReviewActivity", "PLACE_IMAGE: $placeImage")
            Log.d("SpaceReviewActivity", "PLACE_RATING: $rating")

            val intent = Intent(this, ReviewActivity::class.java)
            startActivity(intent)  // ‚úÖ Í∏∞Ï°¥ ReviewActivityÍ∞Ä ÏûàÎã§Î©¥ Ïû¨ÏÇ¨Ïö©
            finish()  // ÌòÑÏû¨ Ïï°Ìã∞ÎπÑÌã∞ Ï¢ÖÎ£å
        }
    }

    // ‚úÖ Î≥ÑÏ†êÏù¥ 0.5 Ïù¥ÏÉÅÏù¥Î©¥ Î≤ÑÌäº ÌôúÏÑ±Ìôî
    private fun validateForm(rating: Float) {
        binding.submitButton.isEnabled = rating >= 0.5

        binding.submitButton.setBackgroundColor(
            if (rating >= 0.5) getColor(R.color.primary_50) else getColor(R.color.white_10)
        )
    }

    // ‚úÖ Ïû•ÏÜå Îç∞Ïù¥ÌÑ∞ `SharedPreferences`Ïóê Ï†ÄÏû•
    private fun savePlaceToPreferences(placeId: Long, placeTitle: String, placeImage: String, rating: Float) {
        val sharedPref = getSharedPreferences("ReviewData", MODE_PRIVATE)
        val editor = sharedPref.edit()

        editor.putLong("PLACE_ID", placeId)
        editor.putString("PLACE_TITLE", placeTitle)
        editor.putString("PLACE_IMAGE", placeImage)
        editor.putFloat("PLACE_RATING", rating)
        editor.apply()
    }
}
